struct object
    integer     processes   = 0x0
    unit        unit        = null
    mob         mob         = -1
    
    gamer       gamer       = 0  // Default: Red Player 
    
    integer     handleID    = 0
    integer     typeID      = 0

    method destroy takes nothing returns nothing
        if this.mob >= 0 then
            call mob.destroy()
        endif
        set this.unit = null
       call this.deallocate()
    endmethod
    
    static method callback  takes nothing returns nothing
        local clock     xclock  = clock.expired ( )
        local thistype  this    = xclock.load   ( 0 )
        
        if this.processes < 1 then
            call xclock.pause  ()
            call   this.destroy()
            call xclock.destroy()
        endif
        
    endmethod
    
    method operator x takes nothing returns real
        return GetWidgetX( this.unit )
    endmethod

    method operator x= takes real x returns nothing
        call SetWidgetX( this.unit, x )
    endmethod

    method operator y takes nothing returns real
        return GetWidgetY( this.unit )
    endmethod

    method operator y= takes real y returns nothing
        call SetWidgetY( this.unit, y )
    endmethod

    method addAbility takes integer abilityId returns nothing
        call UnitAddAbility( this.unit, abilityId )
    endmethod

    method hasAbility takes integer abilityId returns boolean
        return GetUnitAbilityLevel( this.unit, abilityId ) > 0
    endmethod

    method abilityLevel takes integer abilityId returns integer
        return GetUnitAbilityLevel( this.unit, abilityId )
    endmethod

    method hasBuff takes integer buffId returns boolean
        return GetUnitBuffLevel(  this.unit, buffId ) > 0
    endmethod

    method buffLevel takes integer buffId returns integer
        return GetUnitBuffLevel(  this.unit, buffId )
    endmethod

    method isEnemy takes object o returns boolean
        return IsUnitEnemy( o.unit, this.gamer.player )
    endmethod

    method isAlly takes object o returns boolean
        return IsUnitAlly( o.unit, this.gamer.player )
    endmethod

    method isMagicImunne takes nothing returns boolean
        return IsUnitType(this.unit, UNIT_TYPE_MAGIC_IMMUNE) 
    endmethod

    method isBuilding takes nothing returns boolean
        return IsUnitType(this.unit, UNIT_TYPE_STRUCTURE)
    endmethod

    method isAncient takes nothing returns boolean
        return IsUnitType(this.unit, UNIT_TYPE_ANCIENT)
    endmethod

    method isMechanical takes nothing returns boolean
        return IsUnitType(this.unit, UNIT_TYPE_MECHANICAL)
    endmethod 

    method isHero takes nothing returns boolean
        return IsUnitType( this.unit, UNIT_TYPE_HERO )
    endmethod 

    // Правильно действует с версии v1.0.30.109 
    method addBonusAttack takes integer addAttack returns nothing
        local ability ab = GetUnitAbility( this.unit, 'AItk' )
        call SetAbilityIntegerLevelField( ab, ABILITY_ILF_ATTACK_BONUS, 0, GetAbilityIntegerLevelField( ab, ABILITY_ILF_ATTACK_BONUS, 0) + addAttack )
        set ab = null
    endmethod

    // Правильно действует с версии v1.0.30.109 
    method addBonusArmor takes integer addArmor returns nothing
        local ability ab = GetUnitAbility( this.unit, 'AId0' )
        call SetAbilityIntegerLevelField( ab, ABILITY_ILF_DEFENSE_BONUS_IDEF, 0, GetAbilityIntegerLevelField( ab, ABILITY_ILF_DEFENSE_BONUS_IDEF, 0 ) + addArmor )
        set ab = null
    endmethod

    // Правильно действует с версии v1.0.30.109  
    method addBonusStr takes integer addStr returns nothing
        local ability ab = GetUnitAbility( this.unit, 'Aamk' )
        call SetAbilityIntegerLevelField( ab, ABILITY_ILF_STRENGTH_BONUS_ISTR, 0, GetAbilityIntegerLevelField( ab, ABILITY_ILF_STRENGTH_BONUS_ISTR, 0 ) + addStr )
        set ab = null
    endmethod

    // Правильно действует с версии v1.0.30.109 
    method addBonusAgi takes integer addAgi returns nothing
        local ability ab = GetUnitAbility( this.unit, 'Aamk' )
        call SetAbilityIntegerLevelField( ab, ABILITY_ILF_AGILITY_BONUS, 0, GetAbilityIntegerLevelField( ab, ABILITY_ILF_AGILITY_BONUS, 0 ) + addAgi )
        set ab = null
    endmethod

    // Правильно действует с версии v1.0.30.109 
    method addBonusInt takes integer addInt returns nothing
        local ability ab = GetUnitAbility( this.unit, 'Aamk' )
        call SetAbilityIntegerLevelField( ab, ABILITY_ILF_INTELLIGENCE_BONUS, 0, GetAbilityIntegerLevelField( ab, ABILITY_ILF_INTELLIGENCE_BONUS, 0 ) + addInt )
        set ab = null
    endmethod

    method addExtraAttack takes integer addAttack returns nothing
        local boolean onAttack1 = GetUnitWeaponBooleanField( this.unit, UNIT_WEAPON_BF_ATTACKS_ENABLED, 0 )
        local boolean onAttack2 = GetUnitWeaponBooleanField( this.unit, UNIT_WEAPON_BF_ATTACKS_ENABLED, 1 )
        if onAttack1 then
            call SetUnitWeaponIntegerField( this.unit, UNIT_WEAPON_IF_ATTACK_DAMAGE_BONUS, 0, GetUnitWeaponIntegerField( this.unit, UNIT_WEAPON_IF_ATTACK_DAMAGE_BONUS, 0 ) + addAttack )
        elseif onAttack2 then
            call SetUnitWeaponIntegerField( this.unit, UNIT_WEAPON_IF_ATTACK_DAMAGE_BONUS, 1, GetUnitWeaponIntegerField( this.unit, UNIT_WEAPON_IF_ATTACK_DAMAGE_BONUS, 0 ) + addAttack )
        endif
    endmethod
    
    method waitDestroy takes nothing returns nothing
        local clock xclock = clock.create()
        call xclock.save ( 0,    this )
        call xclock.start( 0.05, true, function thistype.callback )
    endmethod
    
    method except takes nothing returns nothing
        set this.processes = 0x0
    endmethod
    
    method invulnerable takes boolean isInvulnerable returns nothing
        call SetUnitInvulnerable( this.unit, isInvulnerable )
    endmethod
    
    static method get takes unit data returns thistype
        return GetUnitUserData( data ) - 1
    endmethod

    static method filter takes nothing returns thistype
        return GetUnitUserData( GetFilterUnit() ) - 1
    endmethod

    static method enum takes nothing returns thistype
        return GetUnitUserData( GetEnumUnit() ) - 1
    endmethod

    method silence takes nothing returns nothing
        call UnitApplySilence( this.unit, true )
    endmethod

    method unSilence takes nothing returns nothing
        call UnitApplySilence( this.unit, false )
    endmethod
    
    // Предупреждение!
    // Только для одиночной игры 
    method share takes gamer gmr returns nothing
        call SetUnitVisibleByPlayer( this.unit, gmr.player, true )
    endmethod

    // Предупреждение!
    // Только для одиночной игры 
    method unshare takes gamer gmr returns nothing
        call SetUnitVisibleByPlayer( this.unit, gmr.player, false )
    endmethod

    static method create takes unit wUnit returns thistype
        local thistype this = thistype.allocate()
            set this.unit = wUnit
            set this.gamer = gamer.getOf(wUnit)

            set this.handleID   = GetHandleId( this.unit )
            set this.typeID     = GetUnitTypeId( this.unit )
            call SetUnitUserData( this.unit, this + 1 )
        return this
    endmethod
endstruct

function CreateObjectAtRect takes gamer gmr, integer typeID, rect rct, real face returns object
    return object.create( CreateUnit( gmr.player, typeID, GetRectCenterX(rct), GetRectCenterY(rct), face ) )
endfunction

function CreateObject takes gamer gmr, integer typeID, real x, real y, real face returns object
    return object.create( CreateUnit( gmr.player, typeID, x, y, face ) )
endfunction

struct objectlist
    group group = null
    
    method destroy takes nothing returns nothing
        call DestroyGroup(this.group)
        set this.group = null
        call this.deallocate()
    endmethod

    method counts takes nothing returns integer
        return GroupGetCount(this.group)
    endmethod

    method isEmpty takes nothing returns boolean
        return GroupGetCount(this.group) == 0
    endmethod

    method firstObject takes nothing returns object
        return object.get(FirstOfGroup(this.group))
    endmethod

    method getObjectByIndex takes integer index returns object
        return object.get(GroupGetUnitByIndex(this.group, index))
    endmethod

    method addObject takes object obj returns nothing
        call GroupAddUnit( this.group, obj.unit )
    endmethod

    method removeObject takes object obj returns nothing
        call GroupRemoveUnit( this.group, obj.unit )
    endmethod

    method enum takes real x, real y, real r returns nothing
        call GroupEnumUnitsInRange( this.group, x, y, r, null )
    endmethod

    method enumF takes real x, real y, real r, code ff returns nothing
        local filterfunc f = Filter(ff)
        call GroupEnumUnitsInRange( this.group, x, y, r, f )
        call DestroyFilter(f)
        set f = null
    endmethod

    method for takes code callback returns nothing
        call ForGroup( this.group, callback )
    endmethod

    static method create takes nothing returns thistype
        local thistype this = thistype.allocate()
            set this.group = CreateGroup()
        return this
    endmethod
endstruct